{"version":3,"sources":["redux/actions/userActions.js","redux/types.js","redux/reducers/userReducers.js","redux/reducers/listReducers.js","redux/reducers/uiReducers.js","redux/store.js","components/Navbar.js","pages/login.js","pages/signup.js","components/Profile.js","components/CreateDocument.js","components/Document.js","redux/actions/listActions.js","components/ListDocument.js","pages/home.js","components/AuthRoute.js","App.js","serviceWorker.js","index.js"],"names":["getUserDetails","data","dispatch","console","log","axios","get","then","res","type","payload","catch","err","initialState","authenticated","loading","credentials","reducerFunction","state","action","list","loaded","errors","middleware","thunk","reducers","combineReducers","user","userReducers","listReducers","ui","uiReducers","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","logOutUser","bind","localStorage","removeItem","this","className","to","href","onClick","React","Component","whatItReturns","connect","Login","password","username","handleChange","handleSubmit","event","preventDefault","loginUser","history","setState","target","name","value","onSubmit","style","error","borderColor","onChange","placeholder","color","mapActionToProps","post","token","push","setItem","defaults","headers","common","response","withRouter","SignUp","email","confirmPassword","signupUser","textAlign","st","val","Profile","edit","firstName","lastName","age","bio","setEdit","updateProfile","_id","CreateDocument","title","content","sendDocument","Document","handleEdit","item","handleDelete","editDocument","deleteDocument","ListDocument","getList","makeList","listDocument","documents","map","Home","create","switchView","boo","mapStateToProps","AuthRoute2","component","rest","render","AuthRoute1","App","isLoggedIn","tk","getItem","jwtDecode","split","iat","Date","getTime","path","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9464d352.chunk.js","sourcesContent":["import {AUTHENTICATE_USER , LOADING_USER , NOT_LOADING_USER , \n    SET_USER, SET_LOADED , RESET_LOADED ,SET_ERRORS , \n    CLEAR_ERRORS  } from '../types';\nimport axios from 'axios'\n\nexport const signupUser = ( data , history ) => (dispatch) =>{\n    dispatch( {type: LOADING_USER});\n    dispatch({type:CLEAR_ERRORS})\n    axios.post('/signup', data )\n        .then( res => {\n            console.log( res.data );\n            if(res.data.token){\n                history.push('/');\n                let token = `Bearer ${res.data.token}` ;\n                localStorage.setItem( 'FBIdToken', token ) ;\n                axios.defaults.headers.common['Authorization'] = token ;\n                dispatch( getUserDetails() );\n                \n            }else if( res.data.error){\n                return console.log(res.data.error);\n            }\n            dispatch({ type: NOT_LOADING_USER} )\n        })\n        .catch( err =>  {\n            dispatch({ type: NOT_LOADING_USER} )\n            try{\n                console.log( 'err', err.response.data );\n                dispatch({type:SET_ERRORS, payload:{errors:err.response.data} })\n            }\n            catch(err){\n                console.log(err);\n            }\n        })\n    \n}\n\nexport const loginUser = (data , history) => (dispatch) =>{\n    dispatch({type:CLEAR_ERRORS})\n    dispatch( {type: LOADING_USER});\n    axios.post('/login', data )\n        .then( res => {\n            console.log( res.data );\n            if( res.data.token ){\n                history.push('/');\n                let token = `Bearer ${res.data.token}`\n                localStorage.setItem( 'FBIdToken', token );\n                axios.defaults.headers.common['Authorization'] = token; \n                dispatch( getUserDetails());\n\n            } else if( res.data.error ){\n                return console.log(res.data.error);\n            }\n        })\n        .catch( err => {\n            try{\n                console.log(err.response.data);\n                  \n                dispatch( {type:SET_ERRORS , payload:{errors:err.response.data}})\n                \n                \n            }\n            catch(err){\n                console.log(err);\n            }\n        }) \n    dispatch({ type: NOT_LOADING_USER} )\n    \n}\n\nexport const getUserDetails = (data) => (dispatch) => {\n    console.log('in get user ')\n    axios.get('/user')\n        .then( res =>{\n            if( res.data !== {} ){\n                let data = {credentials:res.data}\n                dispatch( {type:SET_USER, payload:res.data })\n            }\n            else{\n                return console.log( res.data)\n            }\n        }).catch( err =>{\n            console.log(err);\n        })\n}\n\nexport const sendDocument = ( data  )  => {\n    return function( dispatch){\n        // this will make sure that the list will reload again ..\n        dispatch( {type:RESET_LOADED})\n        console.log(data);   \n        axios.post('/create',data)\n        .then( res =>{       \n            console.log('success', res.data );\n        })\n        .catch( err =>{\n            console.log( 'error', err );\n        })\n    }\n}\n\n\nexport const updateProfile = ( data ) => ( dispatch) => {\n\n    axios.post('/updateuser', data)\n    .then( res=>{\n        \n        dispatch({type:SET_USER, payload:data  })\n        return res.data ;\n    }).catch( err =>{\n        try{\n            console.log( err.response.data )\n        }catch{\n            console.log('updateProfileerro', err);\n        }\n    })\n}\n\n\n","export const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const SET_USER = 'SET_USER';\nexport const NOT_LOADING_USER = 'NOT_LOADING_USER';\nexport const SET_LIST = 'SET_LIST';\nexport const SET_LOADED = 'SET_LOADED';\nexport const RESET_LOADED = 'RESET_LOADED'\nexport const CLEAR_USER = 'CLEAR_USER'\nexport const CLEAR_LIST = 'CLEAR_LIST'\nexport const PROFILE_UPDATED = 'CLEAR_LIST'\nexport const SET_ERRORS = 'SET_ERRORS'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\nexport const UPDATE_LIST = 'UPDATE_LIST'","import {AUTHENTICATE_USER , LOADING_USER , SET_USER , NOT_LOADING_USER , CLEAR_USER} from '../types';\n\nlet initialState = {\n    authenticated : false,\n    loading : false,\n    credentials : {}\n}\n\nfunction reducerFunction( state=initialState, action){\n    switch( action.type ){\n        case AUTHENTICATE_USER:\n            return{\n                ...state,\n                authenticated :true\n            }\n        case LOADING_USER:\n            return{\n                ...state,\n                loading:true\n            }\n        case NOT_LOADING_USER:\n            return{\n                ...state,\n                loading:false\n            }\n        case SET_USER:\n            return{\n                ...state,\n                loading:false,\n                authenticated:true,\n                credentials: { ...state.credentials , ...action.payload} ,\n            }\n        case CLEAR_USER:\n            return{\n                ...initialState\n            }\n        default:\n            return{\n                ...state\n            }\n\n    }\n}\n\n\nexport default reducerFunction;","import {SET_LIST , SET_LOADED , RESET_LOADED , CLEAR_LIST, CLEAR_USER , UPDATE_LIST} from '../types'\n\nlet initialState = {\n    list:[],\n    loaded:false,\n}\n\nfunction reducerFunction( state=initialState , action ){\n    switch(action.type){\n        case SET_LIST:\n            return{\n                ...state,\n                ...action.payload,\n            }\n        case SET_LOADED:\n            return{\n                ...state,\n                loaded : true,\n            }\n        case RESET_LOADED:\n            return{\n                ...state,\n                loaded:false,\n            }\n        case CLEAR_LIST:\n            return{\n                ...initialState,\n            }\n        case UPDATE_LIST:\n            return{\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return{\n                ...state\n            }\n    }\n}\n\nexport default reducerFunction;","import {CLEAR_ERRORS,SET_ERRORS} from '../types'\n\nlet initialState = {\n    errors:{},\n}\n\nfunction reducerFunction( state=initialState, action ){\n    switch( action.type ){\n        case SET_ERRORS:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case CLEAR_ERRORS:\n            return{\n                ...initialState,\n            }\n        default:\n            return{\n                ...state\n            }\n\n    }\n}\n\n\nexport default reducerFunction;","import {createStore , combineReducers, applyMiddleware, compose} from 'redux'\n\nimport userActions from './actions/userActions' \nimport userReducers from './reducers/userReducers'\nimport listReducers from './reducers/listReducers'\nimport uiReducers from './reducers/uiReducers'\nimport thunk from 'redux-thunk'\n\nlet initialState = {};\n\nconst middleware = [thunk]\n\n\n// this will use the default switch case \nconst reducers = combineReducers({\n    user: userReducers,\n    list: listReducers,\n    ui:uiReducers,\n})\n\nconst store = createStore(\n    reducers,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nexport default store;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './components.css'\n\nimport store from '../redux/store';\nimport {CLEAR_USER, CLEAR_LIST} from '../redux/types';\nimport {connect} from 'react-redux'\n\nclass Navbar extends React.Component {\n    constructor(props){\n        super(props);\n        this.logOutUser = this.logOutUser.bind(this);\n    }\n    logOutUser(){\n        localStorage.removeItem('FBIdToken');\n        store.dispatch({type:CLEAR_USER})\n        store.dispatch({type:CLEAR_LIST})\n    }\n    render(){\n        const {authenticated} = this.props.user;\n        return(\n            <div > \n                <ul className='topnav' >\n                    <li > <Link to='/'> Home  </Link></li>\n                    <li  > <Link to='/login' > Login </Link></li>\n                    {!authenticated && <li  > <Link to='/signup' > SignUp </Link></li>}\n                    {authenticated && <li > <a href='#' onClick={this.logOutUser}>Logout </a> <br/> </li> }\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user:state.user\n})\n\n\nlet whatItReturns = connect(mapStateToProps) ;\nexport default whatItReturns(Navbar)\n\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {loginUser} from '../redux/actions/userActions'\nimport {withRouter} from 'react-router-dom'\nimport './pages.css'\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            password:'',\n            username:''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        console.log('submitted');\n        this.props.loginUser(this.state, this.props.history);\n    }\n    \n    handleChange(event){\n        event.preventDefault();\n        this.setState({[event.target.name] : event.target.value});\n\n    }\n\n    render(){\n        const {loading } = this.props.user ;\n        const {errors} = this.props.ui;\n        console.log('loading',loading);\n        return(\n\n            <div className = 'flexContainer' > \n                <div className='col-3' > </div>\n                <div className='col-6' >\n                    <form onSubmit={this.handleSubmit}>\n                        Username:<input style={ errors.username||errors.error?{borderColor:'red'}:{}} type=\"text\" name='username' onChange={this.handleChange} value={this.state.username} placeholder='username'/>\n                        {errors.username && <label> {errors.username} </label>}\n                        <br/>\n                        Password:<input type=\"text\" style={ errors.password||errors.error?{borderColor:'red'}:{}} name='password' onChange={this.handleChange} value={this.state.password} placeholder=\"password\" />\n                        {errors.password && <label> {errors.password}</label>}\n                        <br/>\n                        <button type=\"submit\" value=\"submit\" style={loading?{color:'green'}:{}} >Button</button> \n                        {errors.error && <label> {errors.error}</label>}\n                        \n                    </form> \n                </div>\n                <div className='col-3' > </div>\n\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) =>({\n    user:state.user,\n    ui:state.ui,\n})\n\nconst mapActionToProps = {\n    loginUser \n}\n\nexport default connect(mapStateToProps,mapActionToProps)( withRouter(Login));","import React from 'react';\nimport {withRouter} from 'react-router-dom'\n//redux stuff\nimport {connect} from 'react-redux'\nimport {signupUser} from '../redux/actions/userActions'\nimport './pages.css'\n\n\nclass SignUp extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email:'',\n            password:'',\n            confirmPassword:'',\n            username:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        console.log( this.state );\n\n        let token = this.props.signupUser( this.state , this.props.history );\n        console.log(token);\n    }\n    \n    handleChange(event){\n        event.preventDefault();\n        this.setState({ [event.target.name] : event.target.value});\n\n    }\n\n    render(){\n        const {loading} = this.props.user;\n        const {errors} = this.props.ui;\n        return(\n            <div style={{textAlign:'center'}}>\n                <h1> Signup Page </h1>\n                <div className='flexContainer'> \n                    <div className='col-3' ></div>\n                    <div className='col-6' >\n                        <form onSubmit={this.handleSubmit}>\n                            Email: <br/><input type=\"text\" name='email' onChange={this.handleChange} value={this.state.email} placeholder=\"Email\" />\n                            {errors.email && <label> {errors.email} </label>}\n                            <br/>PassWord: <br/><input type=\"text\" name='password' onChange={this.handleChange} value={this.state.password} placeholder=\"password\" />\n                            {errors.password && <label> {errors.password} </label>}\n                            <br/>Confirm Password:<br/> <input type=\"text\" name='confirmPassword' onChange={this.handleChange} value={this.state.confirmPassword} placeholder=\"confirmPassword\" />\n                            {errors.confirmPassword && <label> {errors.confirmPassword} </label>}\n                            <br/>username:<br/> <input type=\"text\" name='username' onChange={this.handleChange} value={this.state.username} placeholder='username'/>\n                            {errors.username && <label> {errors.username} </label>}\n                            <br/><button type=\"submit\" value=\"submit\" >Submit</button>\n                            {errors.errors && <label> {errors.errors} </label>}\n                        </form>\n                    </div>\n                    <div className='col-3' ></div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user:state.user,\n    ui:state.ui,\n})\n\nconst mapActionToProps = {\n    signupUser,\n}\nlet whatItReturns = connect(mapStateToProps,mapActionToProps) ;\nexport default whatItReturns(withRouter(SignUp));\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport fs from 'fs'\nimport {updateProfile} from '../redux/actions/userActions'\n\nconst st = {\n    val:{\n        textAlign:'left',\n    }\n}\n\nclass Profile extends Component {\n    constructor( props ){\n        super(props);        \n        this.state = {\n            edit:false,\n            email:'',\n            firstName:'',\n            lastName:'',\n            age:'',\n            bio:'',\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.setEdit = this.setEdit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        console.log( this.state );\n        let data = this.state;\n        delete data.edit;\n        this.props.updateProfile( data );\n        \n        this.setState({edit:false})\n        \n    }\n\n\n\n    handleChange(event){\n        event.preventDefault();\n        this.setState({ [event.target.name] : event.target.value});\n\n    }\n\n    setEdit(){\n        \n        const {credentials:{ _id, email,username,firstName,lastName,age,bio  }} = this.props.user;\n        this.setState({edit:true , email:email, username:username, firstName,lastName,age,bio})\n    }\n\n    render(){\n        let {credentials:{_id,email,username , firstName, lastName, age, bio }} = this.props.user;\n        let edit = this.state.edit;\n\n        return(\n            <div style={ st.val }> \n                Profile Section\n\n                { edit || \n                    <ul>\n                        <li>id:         {_id}</li>\n                        <li>email:      {email}  </li>\n                        <li>username:   { username}</li>\n                        <li>firstName:   { firstName}</li>\n                        <li>lastName:   { lastName}</li>\n                        <li>age:   { age}</li>\n                        <li>bio:   { bio}</li>\n                        <li> <a href='#' onClick={this.setEdit} >Edit Profile </a> </li>\n                    </ul>\n                } \n                { !edit || \n                    <form onSubmit={this.handleSubmit}>\n                        Email: <input type=\"text\" name='email' onChange={this.handleChange} value={this.state.email} placeholder=\"Email\" />\n                        <br/>firstName: <input type=\"text\" name='firstName' onChange={this.handleChange} value={this.state.firstName} placeholder='firstName'/>\n                        <br/>lastName: <input type=\"text\" name='lastName' onChange={this.handleChange} value={this.state.lastName} placeholder='lastName'/>\n                        <br/>age: <input type=\"text\" name='age' onChange={this.handleChange} value={this.state.age} placeholder='age'/>\n                        <br/>bio: <input type=\"text\" name='bio' onChange={this.handleChange} value={this.state.bio} placeholder='bio'/>\n                        <br/><button type=\"submit\" value=\"submit\" >Submit</button>\n                        \n                    </form>\n                }\n\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return ({user:state.user})\n}\n\nconst mapActionToProps = {\n    updateProfile,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(Profile);","import  React, {Component} from 'react';\n\n// redux stuff \nimport {connect} from 'react-redux'\nimport {sendDocument} from '../redux/actions/userActions'\n\nclass CreateDocument extends Component{\n    constructor( props ){\n        super(props)\n        this.state = {\n            title:'',\n            content:''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        console.log('submitted');\n        this.props.sendDocument({ ...this.state, username:this.props.user.credentials.username } );\n    }\n    \n    handleChange(event){\n        event.preventDefault();\n        this.setState({[event.target.name] : event.target.value});\n\n    }\n\n\n    render(){\n        \n        return(\n            <div>\n                Create Document <br/>\n                <form onSubmit={this.handleSubmit}>\n                    <input type='text' name='title' value={this.state.title} onChange={this.handleChange} placeholder='Title' />\n                    <br/><input type='text' name='content' value={this.state.content} onChange={this.handleChange} placeholder='Write A Note '/>\n                    <br/> < button type='submit' value='submit'> Create </button>\n                </form>\n\n            </div>\n        )\n\n    }\n}\n\nfunction mapStateToProps(state){\n    return { user:state.user}\n}\n\nconst mapActionToProps = {\n    sendDocument,\n}\n\nexport default connect(mapStateToProps, mapActionToProps )(CreateDocument)\n\n","import React, {Component} from 'react'\nimport './components.css';\n\n//redux stuff \nimport {connect } from 'react-redux'\nimport {editDocument , deleteDocument} from '../redux/actions/listActions'\n\nclass Document extends Component {\n    constructor( props ){\n        super(props);\n        this.state = {edit:false, title : '', content : '' }\n        \n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n\n\n    }\n\n    handleEdit = (event) => {\n        event.preventDefault();\n        const {title, content } = this.props.item;\n        this.setState( {edit : true , title:title, content:content });\n    }\n\n    handleDelete = (event) =>{\n        event.preventDefault();\n        console.log( 'buttotn pressed ');\n    }\n\n    handleChange(event){\n        event.preventDefault();\n        this.setState({[event.target.name] : event.target.value});\n    }\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        this.setState( {edit:false} ); \n        this.props.item.title = this.state.title;\n        this.props.item.content = this.state.content;\n\n        let res = this.props.editDocument( { ...this.props.item , username:this.props.user.username });\n        console.log(res);\n    }\n    handleDelete = (event) =>{\n        this.props.deleteDocument( this.props.item );\n    }\n\n    render(){\n        console.log(this.props)\n        let edit = this.state.edit;\n        const { title , content , _id } = this.props.item;\n        return(\n            <div>\n                {!edit && \n                <div className=\"listItem\" >\n                    \n                    <h2> {title} </h2>\n                    <h3> {content} </h3>\n                    < div className=\"listItemButtons\" >\n                        <button onClick={this.handleEdit }>Edit</button> \n                        <button onClick={this.handleDelete}> Delete </button>\n                    </div>\n                    \n                </div>\n                }\n                {edit && \n                    <div className=\"listItem\" >\n                        < form onSubmit={this.handleSubmit} >\n                            <input type=\"text\" value={this.state.title} name='title' onChange = {this.handleChange} />\n                            <input type=\"text\" value={this.state.content} name='content' onChange = {this.handleChange} />\n                            <button> Submit </button>\n                        </form>\n                    \n                    \n                    </div>\n                }\n                <br/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToActions = (state) =>({\n    user:state.user,\n\n})\nlet mapActionToProps = {\n    editDocument,\n    deleteDocument\n}\nexport default connect( mapStateToActions, mapActionToProps)(Document);","import {SET_LIST, SET_LOADED , RESET_LOADED ,  UPDATE_LIST} from '../types'\nimport axios from 'axios'\n\nexport const listDocument = (data) => ( dispatch ) =>{\n    \n    axios.post('/list', {username:data} )\n    .then( res =>{\n        let payload = {list:res.data};\n        dispatch({type:SET_LIST, payload:payload })\n        dispatch({type:SET_LOADED })\n    }).catch( err=>{\n        console.log('error',err);\n    })\n} \n\nexport const editDocument = (data ) => ( dispatch ) =>{\n\n    axios.post( '/editDocument', data )\n    .then( res => {\n        console.log( res.data );\n        return 'inserted'\n    }).catch( (err) =>{\n        console.log( err );\n    })\n}\n\nexport const deleteDocument = (data) =>(dispatch) => {\n    axios.post( '/removeDocument', data )\n    .then(res =>{\n        console.log( res.data )\n        return 'deleted'\n    }).catch( (err) =>{\n        console.log( 'error:' , err );\n    })\n}","import React , {Component} from 'react'\n\n// compoenents \nimport Document from './Document'\n\n//redux stuff\nimport {connect} from 'react-redux'\nimport {listDocument} from '../redux/actions/listActions'\nimport './components.css'\n\nclass ListDocument extends Component {\n    constructor( props ){\n        super(props);\n\n        this.getList = this.getList.bind(this);\n        this.makeList = this.makeList.bind(this);\n    }\n\n    getList(){\n        console.log('getting list');\n        console.log(this.props.user.credentials.username)\n        this.props.listDocument( this.props.user.credentials.username );\n        return;\n    }\n\n    makeList(){\n        console.log( 'createing list');\n        let items = this.props.list.list.documents;\n        let list =  items.map( function(item){\n            return <Document item = {item} /> \n            //return <li>  <div className='title'>{item.title}</div> <br/> <div className='item'>{item.content}</div>   </li> \n        })\n        return (list);\n    }\n    render(){\n        \n        const { list , loaded } = this.props.list \n        const { authenticated } = this.props.user\n        console.log( loaded);\n        return(\n            <div className='listContainer'>\n                {!loaded && authenticated && this.getList()}\n                { !loaded || this.makeList() }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return { user:state.user , list:state.list }\n}\n\nconst mapActionToProps = {\n    listDocument,\n}\n\nexport default connect(mapStateToProps , mapActionToProps )(ListDocument);\n\n","import React from 'react';\nimport Profile from '../components/Profile'\nimport CreateDocument from '../components/CreateDocument'\nimport ListDocument from '../components/ListDocument'\nimport './pages.css' \nimport {withRouter} from 'react-router-dom'\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { create:true } ;\n\n        this.switchView = this.switchView.bind(this);\n    }\n\n    switchView(){\n        let boo = this.state.create?false:true ;\n        this.setState({ create:  boo })\n    }\n    \n    render(){\n        return(\n            <div >\n                \n                \n                <div className='flexContainer'> \n                    <div className = 'col-6'>\n                        <a className='switchClass' href='#' onClick={this.switchView}> Switch </a> <br/>\n                        <br/>{ !this.state.create || <div > <ListDocument/> </div> }\n                        { this.state.create || <div > <CreateDocument/> </div> }\n                    </div>\n                    <div className='col-6'> <Profile/> </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Home);","import { Route, Redirect } from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport React from 'react';\n\n// for redirecting to home if token present and valid\nfunction A1({component:Component, authenticated, ...rest}){\n    console.log( authenticated);\n    return(\n        \n        <Route\n            {...rest} \n            render = { (props) =>\n                (authenticated !== true)? ( <Component {...props}/> ) : < Redirect  to='/' />\n\n            }\n        />\n    )\n}\n\nconst mapStateToProps = (state) =>({\n    user:state.user,\n    authenticated:state.user.authenticated,\n})\n// redirect to login page if token not present and valid \nexport const AuthRoute2 =  \n    connect(mapStateToProps)(\n        ({component:Component, authenticated, ...rest}) =>  {\n        console.log( authenticated);\n        return(\n            \n            <Route\n                {...rest} \n                render = { (props) =>\n                    (authenticated === true)? ( <Component {...props}/> ) : < Redirect  to='/login' />\n\n                }\n            />\n        )\n})\n\n\n\nexport const AuthRoute1 = connect(mapStateToProps)(A1)\n\n","import React , {Component} from 'react';\nimport {BrowserRouter as Router , Link , Switch , Route} from 'react-router-dom'\nimport './App.css';\nimport fs from 'fs'\n// components and pages\nimport Navbar from './components/Navbar'\nimport Login from './pages/login'\nimport SignUp from './pages/signup'\nimport Home from './pages/home'\nimport {AuthRoute1,AuthRoute2} from './components/AuthRoute'\nimport jwtDecode from 'jwt-decode'\n//redux stuff \nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport { SET_USER, AUTHENTICATE_USER } from './redux/types';\nimport {getUserDetails} from './redux/actions/userActions'\nimport axios from 'axios';\n\n\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.isLoggedIn();\n  }\n  \n  isLoggedIn(){\n    let tk = localStorage.getItem('FBIdToken');\n    if( tk !== null ){\n      let token = jwtDecode(tk.split(' ')[1]);\n      console.log(token);\n      const {username,iat} = token;\n\n      if(  (new Date()).getTime() - iat*1000 < 10000000 ){\n        store.dispatch({type:AUTHENTICATE_USER});\n        axios.defaults.headers.common['Authorization'] = tk ; \n        store.dispatch( getUserDetails() );\n      }\n    }\n  }\n  \n  render(){\n    return (\n      <Provider store={store}>\n        <div >\n          <Router>\n            <Navbar/>\n            <br/>\n            <hr/>\n            <br/>\n            <Switch>\n              <AuthRoute1 path='/signup' component={SignUp}/>\n              <AuthRoute1 path='/login' component={Login} />\n              <AuthRoute2 path='/' component={Home} />\n            </Switch>\n          </Router> \n        </div>\n      </Provider>\n    \n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}